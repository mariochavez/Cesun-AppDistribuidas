// ------------------------------------------------------------------------------
//  <autogenerated>
//      This code was generated by a tool.
//      Mono Runtime Version: 4.0.30319.1
// 
//      Changes to this file may cause incorrect behavior and will be lost if 
//      the code is regenerated.
//  </autogenerated>
// ------------------------------------------------------------------------------

namespace SampleWSApp.Client.SecurityWS {
    
    
    /// <remarks/>
    [System.Web.Services.WebServiceBinding(Name="AuthenticationSoap", Namespace="http://www.cesun.edu")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Authentication : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback AuthenticateOperationCompleted;
        
        public Authentication() {
            this.Url = "http://localhost:8080/Authentication.asmx";
        }
        
        public Authentication(string url) {
            this.Url = url;
        }
        
        public event AuthenticateCompletedEventHandler AuthenticateCompleted;
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.cesun.edu/Authenticate", RequestNamespace="http://www.cesun.edu", ResponseNamespace="http://www.cesun.edu", ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped, Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public string Authenticate(string username, string passwordHash) {
            object[] results = this.Invoke("Authenticate", new object[] {
                        username,
                        passwordHash});
            return ((string)(results[0]));
        }
        
        public System.IAsyncResult BeginAuthenticate(string username, string passwordHash, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("Authenticate", new object[] {
                        username,
                        passwordHash}, callback, asyncState);
        }
        
        public string EndAuthenticate(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        public void AuthenticateAsync(string username, string passwordHash) {
            this.AuthenticateAsync(username, passwordHash, null);
        }
        
        public void AuthenticateAsync(string username, string passwordHash, object userState) {
            if ((this.AuthenticateOperationCompleted == null)) {
                this.AuthenticateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAuthenticateCompleted);
            }
            this.InvokeAsync("Authenticate", new object[] {
                        username,
                        passwordHash}, this.AuthenticateOperationCompleted, userState);
        }
        
        private void OnAuthenticateCompleted(object arg) {
            if ((this.AuthenticateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AuthenticateCompleted(this, new AuthenticateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
    }
    
    public partial class AuthenticateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AuthenticateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    public delegate void AuthenticateCompletedEventHandler(object sender, AuthenticateCompletedEventArgs args);
}
